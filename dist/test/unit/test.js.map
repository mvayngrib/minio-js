{"version":3,"sources":["unit/test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2016 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('source-map-support').install()\n\nimport { assert } from 'chai'\nimport Concat from 'concat-stream'\nimport Nock from 'nock'\nimport Through2 from 'through2'\nimport Stream from 'stream'\nimport * as Minio from '../../../dist/main/minio'\nimport { isValidEndpoint, isValidIP, makeDateLong, makeDateShort } from '../../../dist/main/helpers'\n\nimport { parseBucketPolicy, generateBucketPolicy } from '../../../dist/main/bucket-policy'\n\nvar Package = require('../../../package.json')\n\ndescribe('Helpers', () => {\n  it('should validate for s3 endpoint', () => {\n    assert.equal(isValidEndpoint('s3.amazonaws.com'), true)\n  })\n  it('should validate for s3 china', () => {\n    assert.equal(isValidEndpoint('s3.cn-north-1.amazonaws.com.cn'), true)\n  })\n  it('should fail for invalid endpoint', () => {\n    assert.equal(isValidEndpoint('s3-us-west-2.amazonaws.com'), false)\n  })\n  it('should fail for invalid endpoint characters', () => {\n    assert.equal(isValidEndpoint('111.#2.11'), false)\n  })\n  it('should validate for valid ip', () => {\n    assert.equal(isValidIP('1.1.1.1'), true)\n  })\n  it('should fail for invalid ip', () => {\n    assert.equal(isValidIP('1.1.1'), false)\n  })\n  it('should make date short', () => {\n    let date = new Date('2012-12-03T17:25:36.331Z')\n\n    assert.equal(makeDateShort(date), '20121203')\n  })\n  it('should make date long', () => {\n    let date = new Date('2017-08-11T17:26:34.935Z')\n\n    assert.equal(makeDateLong(date), '20170811T172634Z')\n  })\n})\n\ndescribe('CopyConditions', () => {\n  let date = '2017-08-11T19:34:18.437Z'\n\n  let cc = new Minio.CopyConditions()\n\n  describe('#setModified', () => {\n    it('should take a date argument', () => {\n      cc.setModified(new Date(date))\n\n      assert.equal(cc.modified, date)\n    })\n\n    it('should throw without date', () => {\n      assert.throws(() => {\n        cc.setModified()\n      }, /date must be of type Date/)\n\n      assert.throws(() => {\n        cc.setModified({ hi: 'there' })\n      }, /date must be of type Date/)\n    })\n  })\n\n  describe('#setUnmodified', () => {\n    it('should take a date argument', () => {\n      cc.setUnmodified(new Date(date))\n\n      assert.equal(cc.unmodified, date)\n    })\n\n    it('should throw without date', () => {\n      assert.throws(() => {\n        cc.setUnmodified()\n      }, /date must be of type Date/)\n\n      assert.throws(() => {\n        cc.setUnmodified({ hi: 'there' })\n      }, /date must be of type Date/)\n    })\n  })\n})\n\ndescribe('Client', function() {\n  var nockRequests = []\n  this.timeout(5000)\n  beforeEach(() => {\n    Nock.cleanAll()\n    nockRequests = []\n  })\n  afterEach(() => {\n    nockRequests.forEach(element => {\n      if (!element.request.isDone()) {\n        element.request.done()\n      }\n    })\n  })\n  var MockResponse = (address) => {\n      var request = Nock(address),\n        trace = new Error().stack\n      nockRequests.push({\n        request: request,\n        trace: trace\n      })\n      return request\n    },\n    client = new Minio.Client({\n      endPoint: 'localhost',\n      port: 9000,\n      accessKey: 'accesskey',\n      secretKey: 'secretkey',\n      secure: false\n    })\n  describe('new client', () => {\n    it('should work with https', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        accessKey: 'accesskey',\n        secretKey: 'secretkey'\n      })\n      assert.equal(client.port, 443)\n    })\n    it('should override port with http', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        port: 9000,\n        accessKey: 'accesskey',\n        secretKey: 'secretkey',\n        secure: false\n      })\n      assert.equal(client.port, 9000)\n    })\n    it('should work with http', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        accessKey: 'accesskey',\n        secretKey: 'secretkey',\n        secure: false\n      })\n      assert.equal(client.port, 80)\n    })\n    it('should override port with https', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        port: 9000,\n        accessKey: 'accesskey',\n        secretKey: 'secretkey'\n      })\n      assert.equal(client.port, 9000)\n    })\n    it('should fail with url', (done) => {\n      try {\n        new Minio.Client({\n          endPoint: 'http://localhost:9000',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n      } catch (e) {\n        done()\n      }\n    })\n    it('should fail with alphanumeric', (done) => {\n      try {\n        new Minio.Client({\n          endPoint: 'localhost##$@3',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n      } catch (e) {\n        done()\n      }\n    })\n    it('should fail with no url', (done) => {\n      try {\n        new Minio.Client({\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n      } catch (e) {\n        done()\n      }\n    })\n    it('should fail with bad port', (done) => {\n      try {\n        new Minio.Client({\n          endPoint: 'localhost',\n          port: -1,\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n      } catch (e) {\n        done()\n      }\n    })\n  })\n  describe('Presigned URL', () => {\n    describe('presigned-get', () => {\n      it('should not generate presigned url with no access key', (done) => {\n        try {\n          var client = new Minio.Client({\n            endPoint: 'localhost',\n            port: 9000,\n            secure: false\n          })\n          client.presignedGetObject('bucket', 'object', 1000, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should not generate presigned url with wrong expires param', (done) => {\n        try {\n          client.presignedGetObject('bucket', 'object', '0', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should generate presigned url', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        client.presignedGetObject('bucket', 'object', 86400, (e, url) => {\n          assert.equal(e, null)\n          assert.equal(url.length > 0, true)\n          done()\n        })\n      })\n    })\n    describe('presigned-put', () => {\n      it('should not generate presigned url with no access key', (done) => {\n        try {\n          var client = new Minio.Client({\n            endPoint: 'localhost',\n            port: 9000,\n            secure: false\n          })\n          client.presignedPutObject('bucket', 'object', 1000, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should not generate presigned url with wrong expires param', (done) => {\n        try {\n          client.presignedPutObject('bucket', 'object', '0', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should generate presigned url', (done) => {\n        client.presignedPutObject('bucket', 'object', 1000, (e, url) => {\n          assert.equal(e, null)\n          assert.equal(url.length > 0, true)\n          done()\n        })\n      })\n      it('should use default expiry if none is given', (done) => {\n        client.presignedPutObject('bucket', 'object', (e, url) => {\n          assert.equal(e, null)\n          assert(url.length > 0)\n          done()\n        })\n      })\n    })\n  })\n  describe('User Agent', () => {\n    it('should have a default user agent', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        accessKey: 'accesskey',\n        secretKey: 'secretkey'\n      })\n      assert.equal(`Minio (${process.platform}; ${process.arch}) minio-js/${Package.version}`,\n                   client.userAgent)\n    })\n    it('should set user agent', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        accessKey: 'accesskey',\n        secretKey: 'secretkey'\n      })\n      client.setAppInfo('test', '3.2.0')\n      assert.equal(`Minio (${process.platform}; ${process.arch}) minio-js/${Package.version} test/3.2.0`,\n                   client.userAgent)\n    })\n    it('should set user agent without comments', () => {\n      var client = new Minio.Client({\n        endPoint: 'localhost',\n        accessKey: 'accesskey',\n        secretKey: 'secretkey'\n      })\n      client.setAppInfo('test', '3.2.0')\n      assert.equal(`Minio (${process.platform}; ${process.arch}) minio-js/${Package.version} test/3.2.0`,\n                   client.userAgent)\n    })\n    it('should not set user agent without name', (done) => {\n      try {\n        var client = new Minio.Client({\n          endPoint: 'localhost',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n        client.setAppInfo(null, '3.2.0')\n      } catch (e) {\n        done()\n      }\n    })\n    it('should not set user agent with empty name', (done) => {\n      try {\n        var client = new Minio.Client({\n          endPoint: 'localhost',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n        client.setAppInfo('', '3.2.0')\n      } catch (e) {\n        done()\n      }\n    })\n    it('should not set user agent without version', (done) => {\n      try {\n        var client = new Minio.Client({\n          endPoint: 'localhost',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n        client.setAppInfo('test', null)\n      } catch (e) {\n        done()\n      }\n    })\n    it('should not set user agent with empty version', (done) => {\n      try {\n        var client = new Minio.Client({\n          endPoint: 'localhost',\n          accessKey: 'accesskey',\n          secretKey: 'secretkey'\n        })\n        client.setAppInfo('test', '')\n      } catch (e) {\n        done()\n      }\n    })\n  })\n  describe('Authentication', () => {\n    describe('not set', () => {\n      it('should not send auth info without keys', (done) => {\n        client = new Minio.Client({\n          endPoint: 'localhost',\n          port: 9000,\n          secure: false\n        })\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000', {\n          badHeaders: ['Authorization']\n        }).head('/bucket/object').reply(200, '', {\n          'ETag': 'etag',\n          'Content-Length': 11,\n          'Last-Modified': 'lastmodified',\n          'Content-Type': 'text/plain'\n        })\n        client.statObject('bucket', 'object', (e, r) => {\n          assert.deepEqual(r, {\n            size: 11,\n            'lastModified': 'lastmodified',\n            etag: 'etag',\n            contentType: 'text/plain'\n          })\n          done()\n        })\n      })\n    })\n    describe('set with access and secret keys', () => {\n      it('should not send auth info without keys', (done) => {\n        client = new Minio.Client({\n          endPoint: 'localhost',\n          port: 9000,\n          accessKey: 'accessKey',\n          secretKey: 'secretKey',\n          secure: false\n        })\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000', {\n          reqHeaders: {\n            'x-amz-content-sha256': 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',\n            'Authorization': '/AWS4-HMAC-SHA256/i',\n          }\n        }).head('/bucket/object').reply(200, '', {\n          'ETag': 'etag',\n          'Content-Length': 11,\n          'Last-Modified': 'lastmodified',\n          'Content-Type': 'text/plain'\n        })\n        client.statObject('bucket', 'object', (e, r) => {\n          assert.deepEqual(r, {\n            size: 11,\n            'lastModified': 'lastmodified',\n            etag: 'etag',\n            contentType: 'text/plain'\n          })\n          done()\n        })\n      })\n    })\n  })\n\n  describe('Bucket API calls', () => {\n    describe('#makeBucket(bucket, region, callback)', () => {\n      it('should call the callback on success', (done) => {\n        MockResponse('http://localhost:9000').put('/bucket').reply(200)\n        client.makeBucket('bucket', '', (e) => {\n          assert.equal(e, null)\n          done()\n        })\n      })\n      it('pass an error into the callback on failure', (done) => {\n        MockResponse('http://localhost:9000').put('/bucket').reply(400, generateError('code', 'message', 'requestid', 'hostid', '/bucket'))\n        client.makeBucket('bucket', '', checkError('code', 'message', 'requestid', 'hostid', '/bucket', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.makeBucket(null, '', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.makeBucket('', '', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.makeBucket('  \\n  \\t  ', '', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n    })\n\n    describe('#listBuckets()', () => {\n      it('should generate a bucket iterator', (done) => {\n        MockResponse('http://localhost:9000').get('/').reply(200, '<ListAllMyBucketsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner><Buckets><Bucket><Name>bucket</Name><CreationDate>2015-05-05T20:35:51.410Z</CreationDate></Bucket><Bucket><Name>foo</Name><CreationDate>2015-05-05T20:35:47.170Z</CreationDate></Bucket></Buckets></ListAllMyBucketsResult>')\n        var expectedResults = [{\n          name: 'bucket',\n          creationDate: new Date('2015-05-05T20:35:51.410Z')\n        }, {\n          name: 'foo',\n          creationDate: new Date('2015-05-05T20:35:47.170Z')\n        }]\n        client.listBuckets(function(e, buckets) {\n          assert.deepEqual(buckets, expectedResults)\n          done()\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').get('/').reply(400, generateError('code', 'message', 'requestid', 'hostid', '/'))\n        client.listBuckets(checkError('code', 'message', 'requestid', 'hostid', '/', done))\n      })\n    })\n\n    describe('#bucketExists(bucket, cb)', () => {\n      it('should call callback with no options if successful', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').head('/bucket').reply(200)\n        client.bucketExists('bucket', (e) => {\n          assert.equal(e, null)\n          done()\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').head('/bucket').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.bucketExists('bucket', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should return an error on moved permanently', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').head('/bucket').reply(301)\n        client.bucketExists('bucket', checkError('MovedPermanently', 'Moved Permanently', null, null, null, done))\n      })\n      it('should return an error on 404', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').head('/bucket').reply(403)\n        client.bucketExists('bucket', checkError('AccessDenied', 'Valid and authorized credentials required', null, null, null, done))\n      })\n      it('should return an error on 404', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').head('/bucket').reply(404)\n        client.bucketExists('bucket', checkError('NotFound', 'Not Found', null, null, null, done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.bucketExists(null, assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.bucketExists('', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.BucketExists('  \\n  \\t  ', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n    })\n\n    describe('#removeBucket(bucket, cb)', () => {\n      it('should remove a bucket', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').delete('/bucket').reply(204)\n        client.removeBucket('bucket', () => {\n          done()\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').delete('/bucket').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.removeBucket('bucket', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.removeBucket(null, assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeBucket('', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeBucket('  \\n  \\t  ', assert.fail)\n        } catch (e) {\n          done()\n        }\n      })\n    })\n  })\n\n  describe('bucket policy', () => {\n    describe('constants', () => {\n      it('should equal string values', () => {\n        assert.equal(Minio.Policy.NONE, 'none')\n        assert.equal(Minio.Policy.READONLY, 'readonly')\n        assert.equal(Minio.Policy.READWRITE, 'readwrite')\n        assert.equal(Minio.Policy.WRITEONLY, 'writeonly')\n      })\n    })\n    describe('internal #parseBucketPolicy(policy, bucketName, objectPrefix)', () => {\n      it('should parse Policy.READONLY', () => {\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucket\"],\"Resource\":[\"arn:aws:s3:::bucket\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::bucket/*\"]}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.READONLY)\n      })\n      it('should parse Policy.WRITEONLY', () => {\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":[\"arn:aws:s3:::bucket\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::bucket/*\"]}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.WRITEONLY)\n      })\n      it('should parse Policy.READWRITE', () => {\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":[\"arn:aws:s3:::bucket\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\",\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::bucket/*\"]}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.READWRITE)\n      })\n      it('should parse AWS Policy.READONLY', () => {\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"s3:GetBucketLocation\",\"Resource\":\"arn:aws:s3:::bucket\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"s3:GetObject\",\"Resource\":\"arn:aws:s3:::bucket/*\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"s3:ListBucket\",\"Resource\":\"arn:aws:s3:::bucket\"}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.READONLY)\n      })\n      it('should parse AWS Policy.READWRITE', () => {\n        // AWS drops the array for the string, so the parser should normalize this back.\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":\"arn:aws:s3:::bucket\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"s3:GetObject\",\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\"],\"Resource\":\"arn:aws:s3:::bucket/*\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"s3:ListBucket\",\"Resource\":\"arn:aws:s3:::bucket\"}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.READWRITE)\n      })\n      it('should parse Policy.NONE', () => {\n        let payload = JSON.parse('{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:DeleteObject\"],\"Resource\":[\"arn:aws:s3:::bucket/*\"]}]}')\n\n        assert.equal(parseBucketPolicy(payload, 'bucket', ''), Minio.Policy.NONE)\n      })\n    })\n    describe('internal #generateBucketPolicy(policy, bucketName, objectPrefix)', () => {\n      it('should handle Policy.READONLY', () => {\n        let payload = generateBucketPolicy(Minio.Policy.READONLY, 'bucket5', '')\n\n        assert.equal(JSON.stringify(payload), '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\"],\"Resource\":[\"arn:aws:s3:::bucket5\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::bucket5/*\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:ListBucket\"],\"Resource\":[\"arn:aws:s3:::bucket5\"]}]}')\n      })\n      it('should handle Policy.WRITEONLY', () => {\n        let payload = generateBucketPolicy(Minio.Policy.WRITEONLY, 'bucket6', '')\n\n        assert.equal(JSON.stringify(payload), '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":[\"arn:aws:s3:::bucket6\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::bucket6/*\"]}]}')\n      })\n      it('should handle Policy.READWRITE', () => {\n        let payload = generateBucketPolicy(Minio.Policy.READWRITE, 'bucket8', '')\n\n        assert.equal(JSON.stringify(payload), '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":[\"arn:aws:s3:::bucket8\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetObject\",\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::bucket8/*\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:ListBucket\"],\"Resource\":[\"arn:aws:s3:::bucket8\"]}]}')\n      })\n      it('should handle Policy.READWRITE with prefix', () => {\n        let payload = generateBucketPolicy(Minio.Policy.READWRITE, 'bucket9', 'prefix')\n\n        assert.equal(JSON.stringify(payload), '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucketMultipartUploads\"],\"Resource\":[\"arn:aws:s3:::bucket9\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:GetObject\",\"s3:AbortMultipartUpload\",\"s3:DeleteObject\",\"s3:ListMultipartUploadParts\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::bucket9/prefix*\"]},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Action\":[\"s3:ListBucket\"],\"Resource\":[\"arn:aws:s3:::bucket9\"],\"Condition\":{\"StringEquals\":{\"s3:prefix\":\"prefix\"}}}]}')\n      })\n    })\n  })\n\n  describe('object level', () => {\n    describe('#getObject(bucket, object, callback)', () => {\n      it('should return a stream object', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').get('/bucket/object').reply(200, 'hello world')\n        client.getObject('bucket', 'object', (e, r) => {\n          assert.equal(e, null)\n          r.pipe(Concat(buf => {\n            assert.equal(buf, 'hello world')\n            done()\n          }))\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket/object').reply(400, generateError('code', 'message', 'requestid', 'hostid', '/bucket/object'))\n        client.getObject('bucket', 'object', checkError('code', 'message', 'requestid', 'hostid', '/bucket/object', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.getObject(null, 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.getObject('', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.getObject('  \\n  \\t  ', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on null object', (done) => {\n        try {\n          client.getObject('hello', null, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty object', (done) => {\n        try {\n          client.getObject('hello', '', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n    })\n    describe('#getPartialObject(bucket, object, offset, length, callback)', () => {\n      it('should work with offset and length', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000', {\n          reqHeaders: {\n            'range': '10-21'\n          }\n        }).get('/bucket/object').reply(206, 'hello world')\n        client.getPartialObject('bucket', 'object', 10, 11, (e, r) => {\n          assert.equal(e, null)\n          r.pipe(Concat(buf => {\n            assert.equal(buf, 'hello world')\n            done()\n          }))\n        })\n      })\n      it('should work with length as 0', (done) => {\n        MockResponse('http://localhost:9000', {\n          reqHeaders: {\n            'range': '10-'\n          }\n        }).get('/bucket/object').reply(206, 'hello world')\n        client.getPartialObject('bucket', 'object', 10, 0, (e, r) => {\n          assert.equal(e, null)\n          r.pipe(Concat(buf => {\n            assert.equal(buf, 'hello world')\n            done()\n          }))\n        })\n      })\n      it('should work with offset as 0', (done) => {\n        MockResponse('http://localhost:9000', {\n          reqHeaders: {\n            'range': '0-21'\n          }\n        }).get('/bucket/object').reply(206, 'hello world')\n        client.getPartialObject('bucket', 'object', 0, 11, (e, r) => {\n          assert.equal(e, null)\n          r.pipe(Concat(buf => {\n            assert.equal(buf, 'hello world')\n            done()\n          }))\n        })\n      })\n    })\n\n    describe('#putObject(bucket, object, source, size, contentType, callback)', () => {\n      describe('with small objects using single put', () => {\n        it('should put an object', (done) => {\n          MockResponse('http://localhost:9000').put('/bucket/object', 'hello world').reply(200)\n          var s = new Stream.Readable()\n          s._read = function() {}\n          s.push('hello world')\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11, 'text/plain', done)\n        })\n        it('should pass error to callback', (done) => {\n          MockResponse('http://localhost:9000').put('/bucket/object', 'hello world').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n          var s = new Stream.Readable()\n          s._read = function() {}\n          s.push('hello world')\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11, '', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n        })\n        it('should fail when data is smaller than specified', (done) => {\n          var s = new Stream.Readable()\n          s._read = function() {}\n          s.push('hello world')\n          s.push(null)\n          client.putObject('bucket', 'object', s, 12, '', (e) => {\n            if (e) {\n              done()\n            }\n          })\n        })\n        it('should fail when data is larger than specified', (done) => {\n          var s = new Stream.Readable()\n          s._read = function() {}\n          s.push('hello world')\n          s.push(null)\n          client.putObject('bucket', 'object', s, 10, '', (e) => {\n            if (e) {\n              done()\n            }\n          })\n        })\n        it('should fail with invalid bucket name', () => {\n          assert.throws(() => {\n            client.putObject('ab', 'object', () => {})\n          }, /Invalid bucket name/)\n        })\n        it('should fail with invalid object name', () => {\n          assert.throws(() => {\n            client.putObject('bucket', '', () => {})\n          }, /Invalid object name/)\n        })\n        it('should error with size > maxObjectSize', () => {\n          assert.throws(() => {\n            client.putObject('bucket', 'object', new Stream.Readable(), client.maxObjectSize + 1, () => {})\n          }, /size should not be more than/)\n        })\n        it('should fail on null bucket', (done) => {\n          try {\n            client.putObject(null, 'hello', null, 1, '', function() {})\n          } catch (e) {\n            done()\n          }\n        })\n        it('should fail on empty bucket', (done) => {\n          try {\n            client.putObject(' \\n \\t ', 'hello', null, 1, '', function() {})\n          } catch (e) {\n            done()\n          }\n        })\n        it('should fail on empty bucket', (done) => {\n          try {\n            client.putObject('', 'hello', null, 1, '', function() {})\n          } catch (e) {\n            done()\n          }\n        })\n        it('should fail on null object', (done) => {\n          try {\n            client.putObject('hello', null, null, 1, '', function() {})\n          } catch (e) {\n            done()\n          }\n        })\n        it('should fail on empty object', (done) => {\n          try {\n            client.putObject('hello', '', null, 1, '', function() {})\n          } catch (e) {\n            done()\n          }\n        })\n      })\n      describe('with large objects using multipart', () => {\n        var uploadData = ''\n        for (var i = 0; i < 1024; i++) {\n          uploadData += 'a'\n        }\n        it('should put an object with no resume needed', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').post('/bucket/object?uploads').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<InitiateMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><UploadId>uploadid</UploadId></InitiateMultipartUploadResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=1&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n\n          }).reply(200, '', {\n            etag: 'etag1'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=2&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n\n          }).reply(200, '', {\n            etag: 'etag2'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1024 * 1024\n\n          }).reply(200, '', {\n            etag: 'etag3'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><CompleteMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><Location>location</Location><ETag>\"3858f62230ac3c915f300c664312c11f\"</ETag></CompleteMultipartUploadResult>')\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', done)\n        })\n        it('should resume an object upload', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>object</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Prefix>object</Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').get('/bucket/object?uploadId=uploadid').reply(200, '<ListPartsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><Key>go1.4.2</Key><UploadId>ntWSjzBytPT2xKLaMRonzXncsO10EH4Fc-Iq2-4hG-ulRYB</UploadId><Initiator><ID>minio</ID><DisplayName>minio</DisplayName></Initiator><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner><StorageClass>STANDARD</StorageClass><PartNumberMarker>0</PartNumberMarker><NextPartNumberMarker>0</NextPartNumberMarker><MaxParts>1000</MaxParts><IsTruncated>false</IsTruncated><Part><PartNumber>1</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part><Part><PartNumber>2</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part></ListPartsResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1024 * 1024\n\n          }).reply(200, '', {\n            etag: '79b281060d337b9b2b84ccf390adcf74'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><CompleteMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><Location>location</Location><ETag>\"3858f62230ac3c915f300c664312c11f\"</ETag></CompleteMultipartUploadResult>')\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', (e) => {\n            done(e)\n          })\n        })\n        it('should resume an object upload when uploaded data does not match, overwriting mismatching parts', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>object</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Prefix>object</Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').get('/bucket/object?uploadId=uploadid').reply(200, '<ListPartsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><Key>go1.4.2</Key><UploadId>ntWSjzBytPT2xKLaMRonzXncsO10EH4Fc-Iq2-4hG-ulRYB</UploadId><Initiator><ID>minio</ID><DisplayName>minio</DisplayName></Initiator><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner><StorageClass>STANDARD</StorageClass><PartNumberMarker>0</PartNumberMarker><NextPartNumberMarker>0</NextPartNumberMarker><MaxParts>1000</MaxParts><IsTruncated>false</IsTruncated><Part><PartNumber>1</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part><Part><PartNumber>2</PartNumber><ETag>\"89b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part></ListPartsResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=2&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n          }).reply(200, '', {\n            etag: '79b281060d337b9b2b84ccf390adcf74'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1024 * 1024\n\n          }).reply(200, '', {\n            etag: '79b281060d337b9b2b84ccf390adcf74'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><CompleteMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><Location>location</Location><ETag>\"3858f62230ac3c915f300c664312c11f\"</ETag></CompleteMultipartUploadResult>')\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', done)\n        })\n        it('should succeed if actual size is smaller than expected', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').post('/bucket/object?uploads').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<InitiateMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><UploadId>uploadid</UploadId></InitiateMultipartUploadResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=1&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n          }).reply(200, '', {\n            etag: 'etag1'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=2&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n          }).reply(200, '', {\n            etag: 'etag2'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1 * 1024 * 1024\n          }).reply(200, '', {\n            etag: 'etag3'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><CompleteMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><Location>location</Location><ETag>\"3858f62230ac3c915f300c664312c11f\"</ETag></CompleteMultipartUploadResult>')\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 12 * 1024 * 1024, '', done)\n        })\n        it('should succeed if actual size is larger than expected', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').post('/bucket/object?uploads').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<InitiateMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><UploadId>uploadid</UploadId></InitiateMultipartUploadResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=1&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n          }).reply(200, '', {\n            etag: 'etag1'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=2&uploadId=uploadid', (body) => {\n            return body.length === 5 * 1024 * 1024\n\n          }).reply(200, '', {\n            etag: 'etag2'\n          })\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 2 * 1024 * 1024\n\n          }).reply(200, '', {\n            etag: 'etag3'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><CompleteMultipartUploadResult><Bucket>bucket</Bucket><Key>object</Key><Location>location</Location><ETag>\"3858f62230ac3c915f300c664312c11f\"</ETag></CompleteMultipartUploadResult>')\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 12 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', (e) => {\n            assert.equal(e, null)\n            done()\n          })\n        })\n        it('should pass upload list error to callback', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n        })\n        it('should pass part list error to callback', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>object</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Prefix>object</Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').get('/bucket/object?uploadId=uploadid').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n        })\n        it('should pass put error to callback', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>object</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Prefix>object</Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').get('/bucket/object?uploadId=uploadid').reply(200, '<ListPartsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><Key>go1.4.2</Key><UploadId>ntWSjzBytPT2xKLaMRonzXncsO10EH4Fc-Iq2-4hG-ulRYB</UploadId><Initiator><ID>minio</ID><DisplayName>minio</DisplayName></Initiator><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner><StorageClass>STANDARD</StorageClass><PartNumberMarker>0</PartNumberMarker><NextPartNumberMarker>0</NextPartNumberMarker><MaxParts>1000</MaxParts><IsTruncated>false</IsTruncated><Part><PartNumber>1</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part><Part><PartNumber>2</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part></ListPartsResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1024 * 1024\n\n          }).reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n        })\n        it('should pass complete upload error to callback', (done) => {\n          MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n          MockResponse('http://localhost:9000').get('/bucket?uploads&max-uploads=1000&prefix=object').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker></NextKeyMarker><NextUploadIdMarker></NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>object</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Prefix>object</Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n          MockResponse('http://localhost:9000').get('/bucket/object?uploadId=uploadid').reply(200, '<ListPartsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>bucket</Bucket><Key>go1.4.2</Key><UploadId>ntWSjzBytPT2xKLaMRonzXncsO10EH4Fc-Iq2-4hG-ulRYB</UploadId><Initiator><ID>minio</ID><DisplayName>minio</DisplayName></Initiator><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner><StorageClass>STANDARD</StorageClass><PartNumberMarker>0</PartNumberMarker><NextPartNumberMarker>0</NextPartNumberMarker><MaxParts>1000</MaxParts><IsTruncated>false</IsTruncated><Part><PartNumber>1</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part><Part><PartNumber>2</PartNumber><ETag>\"79b281060d337b9b2b84ccf390adcf74\"</ETag><LastModified>2015-06-03T03:12:34.756Z</LastModified><Size>5242880</Size></Part></ListPartsResult>')\n          MockResponse('http://localhost:9000').put('/bucket/object?partNumber=3&uploadId=uploadid', (body) => {\n            return body.length === 1024 * 1024\n\n          }).reply(200, '', {\n            etag: '79b281060d337b9b2b84ccf390adcf74'\n          })\n          MockResponse('http://localhost:9000').post('/bucket/object?uploadId=uploadid').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n          var s = new Stream.Readable()\n          s._read = function() {}\n          for (var i = 0; i < 11 * 1024; i++) {\n            s.push(uploadData)\n          }\n          s.push(null)\n          client.putObject('bucket', 'object', s, 11 * 1024 * 1024, '', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n        })\n      })\n    })\n\n    describe('#removeAllBucketNotification()', () => {\n      it('should error on invalid arguments', () => {\n        assert.throws(() => {\n          client.removeAllBucketNotification('ab', () => {}, function() {})\n        }, /Invalid bucket name/)\n      })\n      it('remove all bucket notifications', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').put('/bucket?notification').reply(200, '')\n        client.removeAllBucketNotification('bucket', function(e) {\n          assert.equal(e, null)\n          done()\n        })\n      })\n    })\n\n    describe('#setBucketNotification()', () => {\n      it('should error on invalid arguments', () => {\n        assert.throws(() => {\n          client.setBucketNotification('ab', () => {})\n        }, /Invalid bucket name/)\n        assert.throws(() => {\n          client.setBucketNotification('bucket', 49, () => {})\n        }, /notification config should be of type \"Object\"/)\n      })\n      it('set a bucket notification', (done) => {\n        MockResponse('http://localhost:9000').put('/bucket?notification').reply(200, '')\n\n        var config = new Minio.NotificationConfig()\n        var arn = Minio.buildARN('aws', 'sns', 'us-west-2', 408065444917, 'TestTopic')\n        var topic = new Minio.TopicConfig(arn)\n\n        topic.addFilterSuffix('.jpg')\n        topic.addFilterPrefix('myphotos/')\n        topic.addEvent(Minio.ObjectCreatedAll)\n\n        config.add(topic)\n\n        client.setBucketNotification('bucket', config, function(e) {\n          assert.equal(e, null)\n          done()\n        })\n      })\n    })\n\n    describe('#getBucketNotification()', () => {\n      it('should error on invalid arguments', () => {\n        assert.throws(() => {\n          client.getBucketNotification('ab', () => {})\n        }, /Invalid bucket name/)\n      })\n      it('get and parse a bucket notification response', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?notification').reply(200, '<NotificationConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"><TopicConfiguration><Id>YjVkM2Y0YmUtNGI3NC00ZjQyLWEwNGItNDIyYWUxY2I0N2M4</Id><Topic>arn:aws:sns:us-east-1:83310034:s3notificationtopic2</Topic><Event>s3:ReducedRedundancyLostObject</Event><Event>s3:ObjectCreated:*</Event><Filter><S3Key><FilterRule><Name>suffix</Name><Value>.jpg</Value></FilterRule><FilterRule><Name>prefix</Name><Value>photos/</Value></FilterRule></S3Key></Filter></TopicConfiguration><QueueConfiguration><Id>ZjVkM2Y0YmUtNGI3NC00ZjQyLWEwNGItNDIyYWUxY2I0N2M4</Id><Queue>arn:aws:sns:us-east-1:83310034:s3notificationqueue2</Queue><Event>s3:ReducedRedundancyLostObject</Event><Event>s3:ObjectCreated:*</Event></QueueConfiguration></NotificationConfiguration>')\n        client.getBucketNotification('bucket', function(e, bucketNotification) {\n          var expectedResults = {\n            TopicConfiguration:[{ Id: 'YjVkM2Y0YmUtNGI3NC00ZjQyLWEwNGItNDIyYWUxY2I0N2M4', Topic:'arn:aws:sns:us-east-1:83310034:s3notificationtopic2', Event:['s3:ReducedRedundancyLostObject', 's3:ObjectCreated:*'], Filter:[{Name:'suffix', Value:'.jpg'}, {Name:'prefix', Value:'photos/'}]}],\n            QueueConfiguration:[ { Id: 'ZjVkM2Y0YmUtNGI3NC00ZjQyLWEwNGItNDIyYWUxY2I0N2M4', Queue:'arn:aws:sns:us-east-1:83310034:s3notificationqueue2', Event:['s3:ReducedRedundancyLostObject', 's3:ObjectCreated:*'], Filter:[]}],\n            CloudFunctionConfiguration:[]}\n          assert.deepEqual(bucketNotification, expectedResults)\n          done()\n        })\n      })\n    })\n\n    describe('#listenBucketNotification', () => {\n      it('should error on invalid arguments', () => {\n        assert.throws(() => {\n          client.listenBucketNotification('ab', 'prefix', 'suffix', ['events'])\n        }, /Invalid bucket name/)\n        assert.throws(() => {\n          client.listenBucketNotification('bucket', {}, 'suffix', ['events'])\n        }, /prefix must be of type string/)\n        assert.throws(() => {\n          client.listenBucketNotification('bucket', '', {}, ['events'])\n        }, /suffix must be of type string/)\n        assert.throws(() => {\n          client.listenBucketNotification('bucket', '', '', {})\n        }, /events must be of type Array/)\n      })\n    })\n\n    describe('#listObjects()', () => {\n      it('should iterate without a prefix', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key1</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key2</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key2&max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key3</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key4</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key4&max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>false</IsTruncated><Contents><Key>key5</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key6</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        var stream = client.listObjects('bucket', '', true),\n          results = [],\n          expectedResults = [{\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key1',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key2',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key3',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key4',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key5',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key6',\n            'size': 1661\n          }]\n        stream.pipe(Through2.obj(function(object, enc, end) {\n          results.push(object)\n          end()\n        }, function(end) {\n          assert.deepEqual(results, expectedResults)\n          end()\n          done()\n        }))\n      })\n      it('should iterate with a prefix', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?max-keys=1000&prefix=key').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key1</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key2</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key2&max-keys=1000&prefix=key').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key3</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key4</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key4&max-keys=1000&prefix=key').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>false</IsTruncated><Contents><Key>key5</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key6</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        var stream = client.listObjects('bucket', 'key', true),\n          results = [],\n          expectedResults = [{\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key1',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key2',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key3',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key4',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': new Date('2015-05-05T02:21:15.716Z'),\n            'name': 'key5',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': new Date('2015-05-05T20:36:17.498Z'),\n            'name': 'key6',\n            'size': 1661\n          }]\n        stream.pipe(Through2.obj(function(object, enc, end) {\n          results.push(object)\n          end()\n        }, function(end) {\n          assert.deepEqual(results, expectedResults)\n          end()\n          done()\n        }))\n      })\n      it.skip('should iterate with recursion', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key1</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key2</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key2&max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key3</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key4</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?marker=key4&max-keys=1000').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>false</IsTruncated><Contents><Key>key5</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key6</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        var stream = client.listObjects('bucket', '', true),\n          results = [],\n          expectedResults = [{\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': '2015-05-05T02:21:15.716Z',\n            'name': 'key1',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': '2015-05-05T20:36:17.498Z',\n            'name': 'key2',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': '2015-05-05T02:21:15.716Z',\n            'name': 'key3',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': '2015-05-05T20:36:17.498Z',\n            'name': 'key4',\n            'size': 1661\n          }, {\n            'etag': '5eb63bbbe01eeed093cb22bb8f5acdc3',\n            'lastModified': '2015-05-05T02:21:15.716Z',\n            'name': 'key5',\n            'size': 11\n          }, {\n            'etag': '2a60eaffa7a82804bdc682ce1df6c2d4',\n            'lastModified': '2015-05-05T20:36:17.498Z',\n            'name': 'key6',\n            'size': 1661\n          }]\n        stream.pipe(Through2.obj(function(object, enc, end) {\n          results.push(object)\n          end()\n        }, function(end) {\n          assert.deepEqual(results, expectedResults)\n          end()\n          done()\n        }))\n      })\n      it('should pass error on stream', (done) => {\n        MockResponse('http://localhost:9000').filteringPath(() => {\n          return '/bucket'\n        }).get('/bucket').reply(400, generateError('code', 'message', 'requestid', 'hostid', '/bucket'))\n        var stream = client.listObjects('bucket')\n        stream.pipe(Through2.obj(function(part, enc, end) {\n          end()\n        }, function(end) {\n          end()\n        }))\n        stream.on('error', checkError('code', 'message', 'requestid', 'hostid', '/bucket', done))\n      })\n      it('should pass error in stream on subsequent error', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').filteringPath(() => {\n          return '/bucket'\n        }).get('/bucket').reply(200, '<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Name>bucket</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><Delimiter></Delimiter><IsTruncated>true</IsTruncated><Contents><Key>key1</Key><LastModified>2015-05-05T02:21:15.716Z</LastModified><ETag>\"5eb63bbbe01eeed093cb22bb8f5acdc3\"</ETag><Size>11</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents><Contents><Key>key2</Key><LastModified>2015-05-05T20:36:17.498Z</LastModified><ETag>\"2a60eaffa7a82804bdc682ce1df6c2d4\"</ETag><Size>1661</Size><StorageClass>STANDARD</StorageClass><Owner><ID>minio</ID><DisplayName>minio</DisplayName></Owner></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').filteringPath(() => {\n          return '/bucket'\n        }).get('/bucket').reply(400, generateError('code', 'message', 'requestid', 'hostid', '/bucket'))\n        var stream = client.listObjects('bucket')\n        stream.pipe(Through2.obj(function(part, enc, end) {\n          end()\n        }, function(end) {\n          end()\n        }))\n        stream.on('error', checkError('code', 'message', 'requestid', 'hostid', '/bucket', done))\n      })\n    })\n\n    describe('#listObjectsV2()', () => {\n      it('should iterate with a truncated flag', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').get('/bucket?list-type=2&max-keys=1000').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"><Name>bucket</Name><Prefix></Prefix><KeyCount>7</KeyCount><MaxKeys>1000</MaxKeys><Delimiter>/</Delimiter><IsTruncated>true</IsTruncated><NextContinuationToken>6b9d1e3d20436</NextContinuationToken><Contents><Key>7mb.bin</Key><LastModified>2016-07-17T07:21:54.000Z</LastModified><ETag>&quot;67dc7f4b9253ab418a9f7fbc4282432a-2&quot;</ETag><Size>7340032</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>')\n        MockResponse('http://localhost:9000').get('/bucket?continuation-token=6b9d1e3d20436&list-type=2&max-keys=1000').reply(200, '<?xml version=\"1.0\" encoding=\"UTF-8\"?><ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"><Name>bucket</Name><Prefix></Prefix><KeyCount>7</KeyCount><MaxKeys>1000</MaxKeys><Delimiter>/</Delimiter><IsTruncated>false</IsTruncated><Contents><Key>hosts</Key><LastModified>2016-07-15T11:46:53.000Z</LastModified><ETag>&quot;2bb4dbc9f2171fcd060366f4ea235c1c&quot;</ETag><Size>220</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>main.go</Key><LastModified>2016-07-19T10:29:14.000Z</LastModified><ETag>&quot;16c5f5a9817b6b9d1e3d204366a22f96&quot;</ETag><Size>8231</Size><StorageClass>STANDARD</StorageClass></Contents><CommonPrefixes><Prefix>1100/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>caddy/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>hosts/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>uploads/</Prefix></CommonPrefixes></ListBucketResult>')\n        var stream = client.listObjectsV2('bucket', '', true),\n          results = [],\n          expectedResults = [\n            {\n              'etag': '67dc7f4b9253ab418a9f7fbc4282432a-2',\n              'lastModified': new Date('2016-07-17T07:21:54.000Z'),\n              'name': '7mb.bin',\n              'size': 7340032 },\n            { 'etag': '2bb4dbc9f2171fcd060366f4ea235c1c',\n              'lastModified': new Date('2016-07-15T11:46:53.000Z'),\n              'name': 'hosts',\n              'size': 220 },\n            { 'etag': '16c5f5a9817b6b9d1e3d204366a22f96',\n              'lastModified': new Date('2016-07-19T10:29:14.000Z'),\n              'name': 'main.go',\n              'size': 8231 },\n            { 'prefix': '1100/',\n              'size': 0 },\n            { 'prefix': 'caddy/',\n              'size': 0 },\n            { 'prefix': 'hosts/',\n              'size': 0 },\n            { 'prefix': 'uploads/',\n              'size': 0\n            }\n          ]\n        stream.pipe(Through2.obj(function(object, enc, end) {\n          results.push(object)\n          end()\n        }, function(end) {\n          assert.deepEqual(results, expectedResults)\n          end()\n          done()\n        }))\n      })\n    })\n\n    describe('#statObject(bucket, object, callback)', () => {\n      it('should retrieve object metadata', (done) => {\n        MockResponse('http://localhost:9000').head('/bucket/object').reply(200, '', {\n          'ETag': 'etag',\n          'Content-Length': 11,\n          'Last-Modified': 'lastmodified',\n          'Content-Type': 'text/plain'\n        })\n        client.statObject('bucket', 'object', (e, r) => {\n          assert.deepEqual(r, {\n            size: 11,\n            lastModified: 'lastmodified',\n            etag: 'etag',\n            contentType: 'text/plain'\n          })\n          done()\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').head('/bucket/object')\n          .reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n\n        client.statObject('bucket', 'object', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.statObject(null, 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.statObject('', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.statObject('  \\n  \\t  ', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on null object', (done) => {\n        try {\n          client.statObject('hello', null, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty object', (done) => {\n        try {\n          client.statObject('hello', '', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n    })\n\n    describe('#removeObject(bucket, object, callback)', () => {\n      it('should delete an object', (done) => {\n        MockResponse('http://localhost:9000').get('/bucket?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').delete('/bucket/object').reply(204)\n        client.removeObject('bucket', 'object', (e) => {\n          assert.equal(e, null)\n          done()\n        })\n      })\n      it('should pass error to callback', (done) => {\n        MockResponse('http://localhost:9000').delete('/bucket/object')\n          .reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.removeObject('bucket', 'object', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.removeObject(null, 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeObject('', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeObject('  \\n  \\t  ', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on null object', (done) => {\n        try {\n          client.removeObject('hello', null, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty object', (done) => {\n        try {\n          client.removeObject('hello', '', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n    })\n\n    describe('#removeIncompleteUpload(bucket, object, callback)', () => {\n      it('should remove an incomplete upload', (done) => {\n        MockResponse('http://localhost:9000').get('/golang?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').get('/golang?uploads&max-uploads=1000&prefix=go1.4.2').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker>keymarker</NextKeyMarker><NextUploadIdMarker>uploadmarker</NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>go1.4.2.1</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Upload><Key>go1.4.2</Key><UploadId>uploadid2</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T15:00:07.759Z</Initiated></Upload><Upload><Key>go1.5.0</Key><UploadId>uploadid2</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T15:00:07.759Z</Initiated></Upload><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n        MockResponse('http://localhost:9000').get('/golang?uploads&max-uploads=1000&prefix=go1.4.2').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><Prefix></Prefix><Delimiter></Delimiter><IsTruncated>false</IsTruncated></ListMultipartUploadsResult>')\n        MockResponse('http://localhost:9000').delete('/golang/go1.4.2?uploadId=uploadid2').reply(204)\n        client.removeIncompleteUpload('golang', 'go1.4.2', done)\n      })\n      it('should pass error to callback on list failure', (done) => {\n        MockResponse('http://localhost:9000').get('/golang?uploads&max-uploads=1000&prefix=go1.4.2').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.removeIncompleteUpload('golang', 'go1.4.2', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should pass error to callback on second list failure', (done) => {\n        MockResponse('http://localhost:9000').get('/golang?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').get('/golang?uploads&max-uploads=1000&prefix=go1.4.2').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker>keymarker</NextKeyMarker><NextUploadIdMarker>uploadmarker</NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>true</IsTruncated><Upload><Key>go1.4.2.1</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Upload><Key>go1.4.2.2</Key><UploadId>uploadid2</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T15:00:07.759Z</Initiated></Upload><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n        MockResponse('http://localhost:9000').get('/golang?uploads&key-marker=keymarker&max-uploads=1000&prefix=go1.4.2&upload-id-marker=uploadmarker').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.removeIncompleteUpload('golang', 'go1.4.2', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should return error on delete failure', (done) => {\n        MockResponse('http://localhost:9000').get('/golang?location').reply(200, '<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">EU</LocationConstraint>')\n        MockResponse('http://localhost:9000').get('/golang?uploads&max-uploads=1000&prefix=go1.4.2').reply(200, '<ListMultipartUploadsResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01\"><Bucket>golang</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker>keymarker</NextKeyMarker><NextUploadIdMarker>uploadmarker</NextUploadIdMarker><EncodingType></EncodingType><MaxUploads>1000</MaxUploads><IsTruncated>false</IsTruncated><Upload><Key>go1.4.2</Key><UploadId>uploadid</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T14:43:35.349Z</Initiated></Upload><Upload><Key>go1.4.2.1</Key><UploadId>uploadid2</UploadId><Initiator><ID></ID><DisplayName></DisplayName></Initiator><Owner><ID></ID><DisplayName></DisplayName></Owner><StorageClass></StorageClass><Initiated>2015-05-30T15:00:07.759Z</Initiated></Upload><Prefix></Prefix><Delimiter></Delimiter></ListMultipartUploadsResult>')\n        MockResponse('http://localhost:9000').delete('/golang/go1.4.2?uploadId=uploadid').reply(400, generateError('code', 'message', 'requestid', 'hostid', 'resource'))\n        client.removeIncompleteUpload('golang', 'go1.4.2', checkError('code', 'message', 'requestid', 'hostid', 'resource', done))\n      })\n      it('should fail on null bucket', (done) => {\n        try {\n          client.removeIncompleteUpload(null, 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeIncompleteUpload('', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty bucket', (done) => {\n        try {\n          client.removeIncompleteUpload('  \\n  \\t  ', 'hello', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on null object', (done) => {\n        try {\n          client.removeIncompleteUpload('hello', null, function() {})\n        } catch (e) {\n          done()\n        }\n      })\n      it('should fail on empty object', (done) => {\n        try {\n          client.removeIncompleteUpload('hello', '', function() {})\n        } catch (e) {\n          done()\n        }\n      })\n    })\n  })\n})\n\nvar checkError = (code, message, requestid, hostid, resource, callback) => {\n  if (!callback) throw new Error('callback can not be null')\n  return (e) => {\n    if (e === null) {\n      callback('expected error, received success')\n    }\n    assert.equal(e.name, 'S3Error')\n    assert.equal(e.code, code)\n    assert.equal(e.message, message)\n    assert.equal(e.requestid, requestid)\n    assert.equal(e.hostid, hostid)\n    assert.equal(e.resource, resource)\n    callback()\n  }\n}\n\nvar generateError = (code, message, requestid, hostid, resource) => {\n  return `<Error><Code>${code}</Code><Message>${message}</Message><RequestId>${requestid}</RequestId><HostId>${hostid}</HostId><Resource>${resource}</Resource></Error>`\n}\n"]}