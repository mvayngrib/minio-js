{"version":3,"sources":["functional/functional-tests.js"],"names":[],"mappings":"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","file":"functional-tests.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst os = require('os')\nconst stream = require('stream')\nconst crypto = require('crypto')\nconst async = require('async')\nconst _ = require('lodash')\nconst fs = require('fs')\nconst http = require('http')\nconst https = require('https')\nconst url = require('url')\nconst chai = require('chai')\nconst assert = chai.assert\nconst superagent = require('superagent')\nconst uuid = require(\"uuid\")\nlet minio\n\ntry {\n  minio = require('../../../dist/main/minio')\n} catch (err){\n  minio = require('minio')\n}\n\nconst Policy = minio.Policy\n\nrequire('source-map-support').install()\n\ndescribe('functional tests', function() {\n  this.timeout(30 * 60 * 1000)\n  var playConfig = {}\n  // If credentials aren't given, default to play.minio.io.\n  if (process.env['SERVER_ENDPOINT']) {\n    var res = process.env['SERVER_ENDPOINT'].split(\":\")\n    playConfig.endPoint = res[0]\n    playConfig.port = parseInt(res[1])\n  } else {\n    playConfig.endPoint = 'play.minio.io'\n    playConfig.port = 9000\n  }\n  playConfig.accessKey = process.env['ACCESS_KEY'] || 'Q3AM3UQ867SPQQA43P2F'\n  playConfig.secretKey = process.env['SECRET_KEY'] || 'zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG'\n\n  // If the user provides ENABLE_HTTPS, 1 = secure, anything else = unsecure.\n  // Otherwise default to secure.\n  if (process.env['ENABLE_HTTPS'] !== undefined) {\n    playConfig.secure = (process.env['ENABLE_HTTPS'] == '1')\n  } else {\n    playConfig.secure = true\n  }\n\n  // dataDir is falsy if we need to generate data on the fly. Otherwise, it will be\n  // a directory with files to read from, i.e. /mint/data.\n  var dataDir = process.env['MINT_DATA_DIR']\n\n  var client = new minio.Client(playConfig)\n  var usEastConfig = playConfig\n  usEastConfig.region = 'us-east-1'\n  var clientUsEastRegion = new minio.Client(usEastConfig)\n\n  var bucketName = uuid.v4()\n  var objectName = uuid.v4()\n\n  var _1byteObjectName = 'datafile-1-b'\n  var _1byte = dataDir ? fs.readFileSync(dataDir + '/' + _1byteObjectName) : (new Buffer(1)).fill(0)\n\n  var _100kbObjectName = 'datafile-100-kB'\n  var _100kb = dataDir ? fs.readFileSync(dataDir + '/' + _100kbObjectName) : (new Buffer(100 * 1024)).fill(0)\n  var _100kbObjectNameCopy = _100kbObjectName + '_copy'\n\n  var _100kbObjectBufferName = `${_100kbObjectName}.buffer`\n  var _100kbObjectStringName = `${_100kbObjectName}.string`\n  var _100kbmd5 = crypto.createHash('md5').update(_100kb).digest('hex')\n\n  var _6mbObjectName = 'datafile-6-MB'\n  var _6mb = dataDir ? fs.readFileSync(dataDir + '/' + _6mbObjectName) : (new Buffer(6 * 1024 * 1024)).fill(0)\n  var _6mbmd5 = crypto.createHash('md5').update(_6mb).digest('hex')\n  var _6mbObjectNameCopy = _6mbObjectName + '_copy'\n\n  var _5mbObjectName = 'datafile-5-MB'\n  var _5mb = dataDir ? fs.readFileSync(dataDir + '/' + _5mbObjectName) : (new Buffer(5 * 1024 * 1024)).fill(0)\n  var _5mbmd5 = crypto.createHash('md5').update(_5mb).digest('hex')\n\n  var tmpDir = os.tmpdir()\n\n  var traceStream\n\n  // FUNCTIONAL_TEST_TRACE env variable contains the path to which trace\n  // will be logged. Set it to /dev/stdout log to the stdout.\n  if (process.env['FUNCTIONAL_TEST_TRACE']) {\n    var filePath = process.env['FUNCTIONAL_TEST_TRACE']\n    // This is necessary for windows.\n    if (filePath === 'process.stdout') {\n      traceStream = process.stdout\n    } else {\n      traceStream = fs.createWriteStream(filePath, { flags: 'a' })\n    }\n    traceStream.write('====================================\\n')\n    client.traceOn(traceStream)\n  }\n\n  before(done => client.makeBucket(bucketName, '', done))\n  after(done => client.removeBucket(bucketName, done))\n\n  if (traceStream) {\n    after(() => {\n      client.traceOff()\n      if (filePath !== 'process.stdout') {\n        traceStream.end()\n      }\n    })\n  }\n\n  describe('makeBucket with period and region', () => {\n    if (playConfig.endPoint === 's3.amazonaws.com') {\n      it('should create bucket in eu-central-1 with period', done => client.makeBucket(`${bucketName}.sec.period`,\n                                                                                       'eu-central-1', done))\n      it('should delete bucket', done => client.removeBucket(`${bucketName}.sec.period`, done))\n    }\n  })\n\n  describe('listBuckets', () => {\n    it('should list bucket', done => {\n      client.listBuckets((e, buckets) => {\n        if (e) return done(e)\n        if (_.find(buckets, { name: bucketName })) return done()\n        done(new Error('bucket not found'))\n      })\n    })\n    it('should list buckets as promise', done => {\n      client.listBuckets()\n        .then(buckets => {\n          if (!_.find(buckets, { name: bucketName }))\n            throw new Error('bucket not found')\n        })\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n  describe('makeBucket with region', () => {\n    it('should fail', done => {\n      try {\n        clientUsEastRegion.makeBucket(`${bucketName}.region`, 'us-east-2', assert.fail)\n      } catch (e) {\n        done()\n      }\n    })\n    it('should succeed', done => {\n      clientUsEastRegion.makeBucket(`${bucketName}.region`, 'us-east-1', done)\n    })\n    it('should delete bucket', done => {\n      clientUsEastRegion.removeBucket(`${bucketName}.region`, done)\n    })\n    it('should succeed as promise', done => {\n      clientUsEastRegion.makeBucket(`${bucketName}.region`, 'us-east-1')\n        .then(() => done())\n        .catch(done)\n    })\n    it('should delete bucket', done => {\n      clientUsEastRegion.removeBucket(`${bucketName}.region`)\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n  describe('bucketExists', () => {\n    it('should check if bucket exists', done => client.bucketExists(bucketName, done))\n    it('should check if bucket does not exist', done => {\n      client.bucketExists(bucketName + 'random', (e) => {\n        if (e.code === 'NoSuchBucket') return done()\n        done(new Error())\n      })\n    })\n    it('should check if bucket exists, promise', done => {\n      client.bucketExists(bucketName)\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n\n  describe('removeBucket', () => {\n    it('should fail for nonexistent bucket', done => {\n      client.removeBucket(\"nonexistentbucket\", (e) => {\n        if (e.code === 'NoSuchBucket') return done()\n        done(new Error())\n      })\n    })\n    it('should succeed as promise', done => {\n      client.makeBucket(`${bucketName}.region`, 'us-east-1')\n        .then(client.removeBucket(`${bucketName}.region`))\n        .then(() => done())\n        .catch(done)\n    })\n  })\n  describe('tests for putObject copyObject getObject getPartialObject statObject removeObject', function() {\n    it('should upload 100KB stream', done => {\n      var stream = readableStream(_100kb)\n      client.putObject(bucketName, _100kbObjectName, stream, _100kb.length, '', done)\n    })\n\n    it('should download 100KB and match content', done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _100kbObjectName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    it('should upload 100KB Buffer', done => {\n      client.putObject(bucketName, _100kbObjectBufferName, _100kb, '', done)\n    })\n\n    it('should download 100KB Buffer upload and match content', done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _100kbObjectBufferName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    it('should upload 100KB string', done => {\n      client.putObject(bucketName, _100kbObjectStringName, _100kb.toString(), '', done)\n    })\n\n    it('should download 100KB string upload and match content', done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _100kbObjectStringName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    it('should upload 100KB Buffer, as promise', done => {\n      client.putObject(bucketName, _100kbObjectBufferName, _100kb, '')\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should download partial data (1KB of 100KB), as promise', done => {\n      client.getPartialObject(bucketName, _100kbObjectBufferName, 0, 1024)\n        .then(stream => {\n          stream.on('data', function() {})\n          stream.on('end', done)\n        })\n        .catch(done)\n    })\n\n    it('should download 100KB Buffer, as promise', done => {\n      client.getObject(bucketName, _100kbObjectBufferName)\n        .then(stream => {\n          stream.on('data', function() {})\n          stream.on('end', done)\n        })\n        .catch(done)\n    })\n\n    it('should upload 6mb', done => {\n      var stream = readableStream(_6mb)\n      client.putObject(bucketName, _6mbObjectName, stream, _6mb.length, '', done)\n    })\n\n    it('should download 6mb and match content', done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _6mbObjectName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _6mbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    it('should download partial data (100kb of the 6mb file) and match content', done => {\n      var hash = crypto.createHash('md5')\n      client.getPartialObject(bucketName, _6mbObjectName, 0, 100 * 1024, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    it('should copy object', done => {\n      client.copyObject(bucketName, _6mbObjectNameCopy, \"/\" + bucketName + \"/\" + _6mbObjectName, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    it('should copy object, as promise', done => {\n      client.copyObject(bucketName, _6mbObjectNameCopy, \"/\" + bucketName + \"/\" + _6mbObjectName)\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should stat object', done => {\n      client.statObject(bucketName, _6mbObjectName, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _6mb.length) return done(new Error('size mismatch'))\n        done()\n      })\n    })\n\n    it('should stat object, as promise', done => {\n      client.statObject(bucketName, _6mbObjectName)\n        .then(stat => {\n          if (stat.size !== _6mb.length)\n            throw new Error('size mismatch')\n        })\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should remove objects created for test', done => {\n      client.removeObject(bucketName, _100kbObjectName)\n        .then(function() {\n          async.map([_100kbObjectBufferName, _100kbObjectStringName, _6mbObjectName, _6mbObjectNameCopy], (objectName, cb) => client.removeObject(bucketName, objectName, cb), done)\n        })\n        .catch(done)\n    })\n\n  })\n\n  describe('tests for copyObject statObject', function() {\n    it('should upload 100KB Buffer with custom content type', done => {\n      client.putObject(bucketName, _100kbObjectName, _100kb, 'custom/content-type', done)\n    })\n\n    it('should copy object with no conditions specified', done => {\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    it('should stat copied object', done => {\n      client.statObject(bucketName, _100kbObjectNameCopy, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _100kb.length) return done(new Error('size mismatch'))\n        if (stat.contentType !== 'custom/content-type') return done(new Error('content-type mismatch'))\n        done()\n      })\n    })\n    it('should copy object with conditions specified', done => {\n      var conds = new minio.CopyConditions()\n      conds.setMatchETagExcept('bd891862ea3e22c93ed53a098218791d')\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    it('should stat copied object', done => {\n      client.statObject(bucketName, _100kbObjectNameCopy, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _100kb.length) return done(new Error('size mismatch'))\n        if (stat.contentType !== 'custom/content-type') return done(new Error('content-type mismatch'))\n        done()\n      })\n    })\n\n    it('should remove objects created for test', done => {\n      async.map([_100kbObjectName, _100kbObjectNameCopy], (objectName, cb) => client.removeObject(bucketName, objectName, cb), done)\n    })\n\n  })\n\n  describe('listIncompleteUploads removeIncompleteUpload', () => {\n    it('should create multipart request', done => {\n      client.initiateNewMultipartUpload(bucketName, _6mbObjectName, 'application/octet-stream', done)\n    })\n    it('should list incomplete upload', function(done) {\n      // Minio's ListIncompleteUploads returns an empty list, so skip this on non-AWS.\n      // See: https://github.com/minio/minio/commit/75c43bfb6c4a2ace\n      if (!client.host.includes('s3.amazonaws.com')) {\n        this.skip()\n      }\n\n      var found = false\n      client.listIncompleteUploads(bucketName, _6mbObjectName, true)\n        .on('error', e => done(e))\n        .on('data', data => {\n          if (data.key === _6mbObjectName) found = true\n        })\n        .on('end', () => {\n          if (found) return done()\n          done(new Error(`${_6mbObjectName} not found during listIncompleteUploads`))\n        })\n    })\n    it('should delete incomplete upload', done => {\n      client.removeIncompleteUpload(bucketName, _6mbObjectName)\n        .then(done)\n        .catch(done)\n    })\n  })\n\n  describe('fPutObject fGetObject', function() {\n    var tmpFileUpload = `${tmpDir}/${_6mbObjectName}`\n    var tmpFileDownload = `${tmpDir}/${_6mbObjectName}.download`\n\n    it(`should create ${tmpFileUpload}`, () => fs.writeFileSync(tmpFileUpload, _6mb))\n\n    it('should upload object using fPutObject', done => client.fPutObject(bucketName, _6mbObjectName, tmpFileUpload, '', done))\n\n    it('should download object using fGetObject', done => client.fGetObject(bucketName, _6mbObjectName, tmpFileDownload, done))\n\n    it('should verify checksum', done => {\n      var md5sum = crypto.createHash('md5').update(fs.readFileSync(tmpFileDownload)).digest('hex')\n      if (md5sum === _6mbmd5) return done()\n      return done(new Error('md5sum mismatch'))\n    })\n\n    it('should upload object using fPutObject, as promise', done => {\n      client.removeObject(bucketName, _6mbObjectName)\n        .then(() => client.fPutObject(bucketName, _6mbObjectName, tmpFileUpload, ''))\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should download object using fGetObject, as promise', done => {\n      client.fGetObject(bucketName, _6mbObjectName, tmpFileDownload)\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should verify checksum', done => {\n      var md5sum = crypto.createHash('md5').update(fs.readFileSync(tmpFileDownload)).digest('hex')\n      if (md5sum === _6mbmd5) return done()\n      return done(new Error('md5sum mismatch'))\n    })\n\n    it('should remove files and objects created', (done) => {\n      fs.unlinkSync(tmpFileUpload)\n      fs.unlinkSync(tmpFileDownload)\n      client.removeObject(bucketName, _6mbObjectName, done)\n    })\n  })\n\n  describe('fGetObject-resume', () => {\n    var localFile = `${tmpDir}/${_5mbObjectName}`\n    it('should upload object', done => {\n      var stream = readableStream(_5mb)\n      client.putObject(bucketName, _5mbObjectName, stream, _5mb.length, '', done)\n    })\n    it('should simulate a partially downloaded file', () => {\n      var tmpFile = `${tmpDir}/${_5mbObjectName}.${_5mbmd5}.part.minio-js`\n      // create a partial file\n      fs.writeFileSync(tmpFile, _100kb)\n    })\n    it('should resume the download', done => client.fGetObject(bucketName, _5mbObjectName, localFile, done))\n    it('should verify md5sum of the downloaded file', done => {\n      var data = fs.readFileSync(localFile)\n      var hash = crypto.createHash('md5').update(data).digest('hex')\n      if (hash === _5mbmd5) return done()\n      done(new Error('md5 of downloaded file does not match'))\n    })\n    it('should remove tmp files', done => {\n      fs.unlinkSync(localFile)\n      client.removeObject(bucketName, _5mbObjectName, done)\n    })\n  })\n\n  describe('bucket policy', () => {\n    let policies = [Policy.READONLY, Policy.WRITEONLY, Policy.READWRITE]\n\n    // Iterate through the basic policies ensuring it can set and check each of them.\n    policies.forEach(policy => {\n      it(`should set bucket policy to ${policy}, then verify`, done => {\n        client.setBucketPolicy(bucketName, '', policy, err => {\n          if (err) return done(err)\n\n          // Check using the client.\n          client.getBucketPolicy(bucketName, '', (err, response) => {\n            if (err) return done(err)\n\n            if (response != policy) {\n              return done(new Error(`policy is incorrect (${response} != ${policy})`))\n            }\n\n            done()\n          })\n        })\n      })\n    })\n\n    it('should set and get bucket policy as promise', done => {\n      client.setBucketPolicy(bucketName, '', Policy.READONLY)\n        .then(() => client.getBucketPolicy(bucketName, ''))\n        .then(response => {\n          if (response != Policy.READONLY)\n            throw new Error(`policy is incorrect (${response} != ${Policy.READONLY})`)\n        })\n        .then(() => done())\n        .catch(done)\n    })\n\n    it('should set bucket policy only on a prefix', done => {\n      // READONLY also works, as long as it can read.\n      let policy = Policy.READWRITE\n\n      // Set the bucket policy on `prefix`, and check to make sure it only\n      // returns this bucket policy when asked about `prefix`.\n      client.setBucketPolicy(bucketName, 'prefix', policy, err => {\n        if (err) return done(err)\n\n        // Check on the prefix.\n        client.getBucketPolicy(bucketName, 'prefix', (err, response) => {\n          if (err) return done(err)\n\n          if (response != policy) {\n            return done(new Error(`policy is incorrect (${response} != ${policy})`))\n          }\n\n          // Check on a different prefix.\n          client.getBucketPolicy(bucketName, 'wrongprefix', (err, response) => {\n            if (err) return done(err)\n\n            if (response == policy) {\n              return done(new Error(`policy is incorrect (${response} == ${policy})`))\n            }\n\n            done()\n          })\n        })\n      })\n    })\n\n    it('should set bucket policy to none, then error', done => {\n      client.setBucketPolicy(bucketName, '', Policy.NONE, err => {\n        if (err) return done(err)\n\n        // Check using the client — this should error.\n        client.getBucketPolicy(bucketName, '', (err) => {\n          if (!err) return done(new Error('getBucketPolicy should error'))\n\n          if (!(/does not have a bucket policy/.test(err.message)) &&\n                        !(/bucket policy does not exist/.test(err.message))) {\n            return done(new Error(`error message is incorrect (${err.message})`))\n          }\n          done()\n        })\n      })\n    })\n  })\n\n  describe('presigned operations', () => {\n    it('should upload using presignedUrl', done => {\n      client.presignedPutObject(bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'PUT'\n        options.headers = {\n          'content-length': _1byte.length\n        }\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          response.on('error', e => done(e))\n          response.on('end', () => done())\n          response.on('data', () => {})\n        })\n        request.on('error', e => done(e))\n        request.write(_1byte)\n        request.end()\n      })\n    })\n\n    it('should attempt upload using promise presignedURL', done => {\n      // negative values should trigger an error\n      client.presignedPutObject(bucketName, _1byteObjectName, -123)\n        .then(() => {\n          done(new Error('negative values should trigger an error'))\n        })\n        .catch(() => done())\n    })\n\n    it('should download using presignedUrl', done => {\n      client.presignedGetObject(bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          var error = null\n          response.on('error', e => done(e))\n          response.on('end', () => done(error))\n          response.on('data', (data) => {\n            if (data.toString() !== _1byte.toString()) {\n              error = new Error('content mismatch')\n            }\n          })\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    it('should attempt download using promise presignedURL', done => {\n      client.presignedGetObject(bucketName, 'this.does.not.exist', 2938)\n        .then(assert.fail)\n        .catch(() => done())\n    })\n\n    it('should set response headers to expected values during download for presignedUrl', done => {\n      var respHeaders = {\n        'response-content-type': 'text/html',\n        'response-content-language': 'en',\n        'response-expires': 'Sun, 07 Jun 2020 16:07:58 GMT',\n        'response-cache-control': 'No-cache',\n        'response-content-disposition': 'attachment; filename=testing.txt',\n        'response-content-encoding': 'gzip'\n      }\n      client.presignedGetObject(bucketName, _1byteObjectName, 1000, respHeaders, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on get : ${response.statusCode}`))\n          if (respHeaders['response-content-type'] != response.headers['content-type']) {\n            return done(new Error(`content-type header mismatch`))\n          }\n          if (respHeaders['response-content-language'] != response.headers['content-language']) {\n            return done(new Error(`content-language header mismatch`))\n          }\n          if (respHeaders['response-expires'] != response.headers['expires']) {\n            return done(new Error(`expires header mismatch`))\n          }\n          if (respHeaders['response-cache-control'] != response.headers['cache-control']) {\n            return done(new Error(`cache-control header mismatch`))\n          }\n          if (respHeaders['response-content-disposition'] != response.headers['content-disposition']) {\n            return done(new Error(`content-disposition header mismatch`))\n          }\n          if (respHeaders['response-content-encoding'] != response.headers['content-encoding']) {\n            return done(new Error(`content-encoding header mismatch`))\n          }\n          response.on('data', () => {})\n          done()\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    it('should upload using presigned POST', done => {\n      var policy = client.newPostPolicy()\n      policy.setKey(_1byteObjectName)\n      policy.setBucket(bucketName)\n      var expires = new Date\n      expires.setSeconds(24 * 60 * 60 * 10)\n      policy.setExpires(expires)\n\n      client.presignedPostPolicy(policy, (e, urlStr, formData) => {\n        if (e) return done(e)\n        var req = superagent.post(`${urlStr}`)\n        _.each(formData, (value, key) => req.field(key, value))\n        req.attach('file', new Buffer([_1byte]), 'test')\n        req.end(function(e) {\n          if (e) return done(e)\n          done()\n        })\n        req.on('error', e => done(e))\n      })\n    })\n\n    it('should attempt post policy with promise', done => {\n      client.presignedPostPolicy(null)\n        .then(() => {\n          done(new Error('null policy should fail'))\n        })\n        .catch(() => done())\n    })\n\n    it('should delete uploaded objects', done => {\n      client.removeObject(bucketName, _1byteObjectName, done)\n    })\n  })\n\n  describe('listObjects', function() {\n    var listObjectPrefix = 'miniojsPrefix'\n    var listObjectsNum = 10\n    var objArray = []\n    var listArray = []\n\n    it(`should create ${listObjectsNum} objects`, done => {\n      _.times(listObjectsNum, i => objArray.push(`${listObjectPrefix}.${i}`))\n      objArray = objArray.sort()\n      async.mapLimit(\n        objArray,\n        20,\n        (objectName, cb) => client.putObject(bucketName, objectName, readableStream(_1byte), _1byte.length, '', cb),\n        done\n      )\n    })\n\n    it('should list objects', done => {\n      client.listObjects(bucketName, '', true)\n        .on('error', done)\n        .on('end', () => {\n          if (_.isEqual(objArray, listArray)) return done()\n          return done(new Error(`listObjects lists ${listArray.length} objects, expected ${listObjectsNum}`))\n        })\n        .on('data', data => {\n          listArray.push(data.name)\n        })\n    })\n\n    it('should list objects using v2 api', done => {\n      listArray = []\n      client.listObjectsV2(bucketName, '', true)\n        .on('error', done)\n        .on('end', () => {\n          if (_.isEqual(objArray, listArray)) return done()\n          return done(new Error(`listObjects lists ${listArray.length} objects, expected ${listObjectsNum}`))\n        })\n        .on('data', data => {\n          listArray.push(data.name)\n        })\n    })\n\n    it(`should remove objects`, done => {\n      async.mapLimit(\n        listArray,\n        20,\n        (objectName, cb) => client.removeObject(bucketName, objectName, cb),\n        done\n      )\n    })\n  })\n\n  function readableStream(data) {\n    var s = new stream.Readable()\n    s._read = () => {}\n    s.push(data)\n    s.push(null)\n    return s\n  }\n\n  describe('bucket notifications', () => {\n    describe('#listenBucketNotification', () => {\n      before(function() {\n        // listenBucketNotification only works on Minio, so skip if\n        // the host is Amazon.\n        if (client.host.includes('s3.amazonaws.com')) {\n          this.skip()\n        }\n      })\n\n      it('should forward error with bad events', done => {\n        let poller = client.listenBucketNotification(bucketName, 'photos/', '.jpg', ['bad'])\n        poller.on('error', error => {\n          assert.match(error.message, /A specified event is not supported for notifications./)\n          assert.equal(error.code, 'InvalidArgument')\n\n          done()\n        })\n      })\n      it('should give exactly one event for single action', done => {\n        let poller = client.listenBucketNotification(bucketName, '', '', ['s3:ObjectCreated:*'])\n        let records = 0\n        poller.on('notification', record => {\n          records++\n\n          assert.equal(record.eventName, 's3:ObjectCreated:Put')\n          assert.equal(record.s3.bucket.name, bucketName)\n          assert.equal(record.s3.object.key, objectName)\n        })\n        client.putObject(bucketName, objectName, 'stringdata', (err) => {\n          if (err) return done(err)\n          // It polls every five seconds, so wait for two-ish polls, then end.\n          setTimeout(() => {\n            assert.equal(records, 1)\n            poller.stop()\n            client.removeObject(bucketName, objectName, done)\n          }, 11 * 1000)\n        })\n      })\n\n      // This test is very similar to that above, except it does not include\n      // Minio.ObjectCreatedAll in the config. Thus, no events should be emitted.\n      it('should give no events for single action', done => {\n        let poller = client.listenBucketNotification(bucketName, '', '', ['s3:ObjectRemoved:*'])\n        poller.on('notification', assert.fail)\n\n        client.putObject(bucketName, objectName, 'stringdata', (err) => {\n          if (err) return done(err)\n          // It polls every five seconds, so wait for two-ish polls, then end.\n          setTimeout(() => {\n            poller.stop()\n            poller.removeAllListeners('notification')\n            // clean up object now\n            client.removeObject(bucketName, objectName, done)\n          }, 11 * 1000)\n        })\n      })\n    })\n  })\n})\n"]}